
@using TimerToysTwo.Model

<div class="my-timer">

    <div class="node-wrapper">

        <span class="material-icons md-18 @ExpandButtonClass"
              @onclick="ToggleExpand"
              title="Show Children">
            @ToggleIconCode
        </span>

        <span class="material-icons md-18 expand"
              @onclick="ToggleShowControls"
              title="Show Controls">
            more_horiz
        </span>

        <span class="elapsed-time">[@ElapsedTimeString]</span>
        <input class="node-name-input" @bind="TimerName" onclick="this.select()" />
    </div>


    <div style="margin-left:30px; display: @ShowControlsStyle;">
        <span class="material-icons md-18"title="Start or Stop Timer">timer</span>
        <span @onclick="ToggleTimer" >@(MyTimer.IsRunning ? "Stop" : "Start")</span>
    </div>

    <div style="margin-left:15px; display: @IsExpandedStyle;">
        @{

            if (MyChildTimers == null)
            {
            }
            else
            {
                foreach (Timer child in MyChildTimers.OrderBy(c => c.CreationTime))
                {
                    Global.loopCount++;  <div style="position:absolute; top:700px; left:100px">@Global.loopCount</div>
                    <Node @ref="MyChildNodes[child.TimerKey]" MyTimer="@child"></Node>
                }
            }
        }
    </div>

</div>

@code {
}
